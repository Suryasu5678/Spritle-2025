<section
  class="scroll-reveal h-[20vh] md:h-[30vh] lg:h-[50vh] xl:h-[70vh] flex justify-center items-center"
>
  <p
    class="font-dm-sans font-normal text-l md:text-3xl lg:text-3xl xl:text-[60px] leading-[1.5] md:leading-[68.12px] lg:leading-[68px] xl:leading-[78.12px] text-justify max-h-[332px] max-w-[1485px]"
  >
    <span class="static-text">At Spritle, </span>
    <span class="first-text fade-text">
      we are not just Engineers; we are visionaries harnessing the
      transformative power of artificial intelligence to propel industries into
      the future for the past 16 years.
    </span>
  </p>
</section>

<style>
  .scroll-reveal span:not(.static-text) {
    color: hsl(0 0% 100% / 0.2);
    background-clip: text;
    background-repeat: no-repeat;
    background-size: 0% 100%;
    background-image: linear-gradient(90deg, white, white);
    animation: scroll-reveal linear forwards; 
    animation-timeline: view(y);
  }

  .font-dm-sans {
    font-family: "DM Sans", sans-serif;
  }

  .first-text {
    transition: all 0.3s ease-in-out;
    opacity: 0;
  }

  .fade-text {
    opacity: 0;
  }

  .fade-text.fade-in {
    opacity: 1;
    animation: fadeIn 0.8s forwards 0.3s;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes scroll-reveal {
    to {
      background-size: 100% 100%;
    }
  }

  .static-text {
    opacity: 1;
    background: none;
    color: #e2e2e2;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const firstTextSpan = document.querySelector(".first-text");

    function handleIntersection(entries, observer) {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          firstTextSpan.style.animationDuration = `${entry.intersectionRatio * 0.5}s`;
          firstTextSpan.classList.add("fade-in");
        } else {
          firstTextSpan.classList.remove("fade-in");
        }
      });
    }

    const observer = new IntersectionObserver(handleIntersection, {
      threshold: Array.from({ length: 50 }, (_, i) => i * 0.01),
    });

    observer.observe(firstTextSpan);
  });
</script>
